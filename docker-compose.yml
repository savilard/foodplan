version: "3.8"

services:
  backend:
    image: 'foodplan_backend:dev'
    restart: always
    build:
        context: .
        dockerfile: ./backend/docker/django/Dockerfile
        args:
          - APP_ENV=dev
    command: bash ./docker/django/gunicorn.sh
    volumes:
      - ./backend:/opt/app/
      - backend_static_data:/var/www/django/static
      - backend_media_data:/var/www/django/media
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      SECRET_KEY: ${SECRET_KEY-REPLACE_ME}
      DEBUG: ${DEBUG-TRUE}
      DATABASE_URL: ${DATABASE_URL-postgres://app_dev:OwOtBdfep9Frut@db:5432/app_dev}
      DOMAIN_NAME: ${DOMAIN_NAME:-REPLACE_ME}

  frontend:
    image: 'foodplan_frontend:dev'
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    command: serve -s build -l 3000
    ports:
      - "127.0.0.1:3000:3000"

  db:
    image: postgres:14.4-alpine
    container_name: app-db
    restart: unless-stopped
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB-app_dev}
      POSTGRES_USER: ${POSTGRES_USER-app_dev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD-OwOtBdfep9Frut}

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docs/redoc.html:/usr/src/app/api/docs/redoc.html
      - ./docs/openapi-schema.yml:/usr/src/app/api/docs/openapi-schema.yml
      - backend_static_data:/usr/src/app/backend_data/static/
      - backend_media_data:/usr/src/app/backend_data/media/

volumes:
  postgres_data:
  backend_static_data:
  backend_media_data:
